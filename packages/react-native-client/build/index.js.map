{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,kBAAkB,EAAE,YAAY,EAAgB,MAAM,mBAAmB,CAAC;AAEnF,oFAAoF;AACpF,kDAAkD;AAClD,OAAO,uBAAuB,MAAM,2BAA2B,CAAC;AAChE,OAAO,qBAAqB,MAAM,yBAAyB,CAAC;AAG5D,iCAAiC;AACjC,MAAM,CAAC,MAAM,EAAE,GAAG,uBAAuB,CAAC,EAAE,CAAC;AAE7C,MAAM,UAAU,KAAK;IACnB,OAAO,uBAAuB,CAAC,KAAK,EAAE,CAAC;AACzC,CAAC;AAED,MAAM,CAAC,KAAK,UAAU,aAAa,CAAC,KAAa;IAC/C,OAAO,MAAM,uBAAuB,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;AAC5D,CAAC;AAED,MAAM,OAAO,GAAG,IAAI,YAAY,CAAC,uBAAuB,IAAI,kBAAkB,CAAC,iBAAiB,CAAC,CAAC;AAElG,MAAM,UAAU,iBAAiB,CAAC,QAA6C;IAC7E,OAAO,OAAO,CAAC,WAAW,CAAqB,UAAU,EAAE,QAAQ,CAAC,CAAC;AACvE,CAAC;AAED,OAAO,EAAE,qBAAqB,EAAkD,CAAC","sourcesContent":["import { NativeModulesProxy, EventEmitter, Subscription } from 'expo-modules-core';\n\n// Import the native module. On web, it will be resolved to ReactNativeClient.web.ts\n// and on native platforms to ReactNativeClient.ts\nimport ReactNativeClientModule from './ReactNativeClientModule';\nimport ReactNativeClientView from './ReactNativeClientView';\nimport { ChangeEventPayload, ReactNativeClientViewProps } from './ReactNativeClient.types';\n\n// Get the native constant value.\nexport const PI = ReactNativeClientModule.PI;\n\nexport function hello(): string {\n  return ReactNativeClientModule.hello();\n}\n\nexport async function setValueAsync(value: string) {\n  return await ReactNativeClientModule.setValueAsync(value);\n}\n\nconst emitter = new EventEmitter(ReactNativeClientModule ?? NativeModulesProxy.ReactNativeClient);\n\nexport function addChangeListener(listener: (event: ChangeEventPayload) => void): Subscription {\n  return emitter.addListener<ChangeEventPayload>('onChange', listener);\n}\n\nexport { ReactNativeClientView, ReactNativeClientViewProps, ChangeEventPayload };\n"]}